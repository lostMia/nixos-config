# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  pkgs,
  modulesPath,
  ...
}: {
  imports = [
    (modulesPath + "/installer/scan/not-detected.nix")
  ];

  boot.initrd.availableKernelModules = ["xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod"];
  boot.initrd.kernelModules = [];
  boot.kernelModules = ["kvm-amd"];
  boot.extraModulePackages = [];

  fileSystems."/" = {
    device = "/dev/disk/by-uuid/656c3977-1ff4-4e13-a3fa-38e2e58f93c9";
    fsType = "ext4";
  };

  boot.initrd.luks.devices."luks-5214b64e-a0ec-4e6f-b389-9329c6146eef".device = "/dev/disk/by-uuid/5214b64e-a0ec-4e6f-b389-9329c6146eef";

  fileSystems."/boot" = {
    device = "/dev/disk/by-uuid/4151-8F42";
    fsType = "vfat";
    options = ["fmask=0022" "dmask=0022"];
  };

  # Enable Vulkan support for NVIDIA
  hardware.opengl.driSupport = true;
  hardware.opengl.driSupport32Bit = true; # 32-bit support for some games or apps
  hardware.opengl.extraPackages = with pkgs; [
    vulkan-tools # Vulkan utilities
    vulkan-validation-layers
  ];

  hardware.graphics = {
    extraPackages = with pkgs; [
      vulkan-tools
      vulkan-validation-layers
      libva-utils
      mesa-utils
      nvidia-settings
    ];
  };

  # Enable NVIDIA proprietary drivers
  services.xserver.videoDrivers = ["nvidia"];

  # Enable Wayland support for NVIDIA
  hardware.nvidia.modesetting.enable = true;

  # Enable experimental GBM backend (required for NVIDIA on Wayland)
  hardware.opengl.enableExperimental = true;

  # Use the Vulkan driver for better performance
  hardware.nvidia.package = pkgs.linuxPackages.nvidiaPackages.stable;

  # Add specific options for NVIDIA Wayland
  environment.variables = {
    __GLX_VENDOR_LIBRARY_NAME = "nvidia"; # Ensure NVIDIA is used for OpenGL
    __EGL_VENDOR_LIBRARY_FILENAMES = "${pkgs.nvidia_x11}/share/glvnd/egl_vendor.d/10_nvidia.json";
    GBM_BACKEND = "nvidia-drm";
  };

  swapDevices = [];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp34s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
